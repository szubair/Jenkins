pipeline {
    agent any
    tools { 
        maven '3.6.3' 
    }
	def userInput = true
	def didTimeout = false
	try {
    	  timeout(time: 5, unit: 'SECONDS') { // change to a convenient timeout for you
          userInput = input(
            id: 'Proceed1', message: 'Would you like to skip this stage?', parameters: [
            [$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'Please confirm you agree with this']
        ])
        }
	} catch(err) { // timeout reached or input false
        def user = err.getCauses()[0].getUser()
        if('SYSTEM' == user.toString()) { // SYSTEM means timeout.
          didTimeout = true
    	} else {
        userInput = false
        echo "Aborted by: [${user}]"
    	}
	}	

    stages {
        stage ('Clone') {
            steps {
                git branch: 'master', url: "https://github.com/jenkins-docs/simple-java-maven-app.git"
            }
        }
        stage('Echo Maven Version') {
	  steps {  
		sh 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout'
	    	}
        }
         stage('Test Version') {
		steps {  
		script {
                    env.VERSION = sh ( script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout',
                    returnStdout: true ).trim()
                }
	    	}
        }
        stage('TEST') {
            steps {
                sh "echo ${VERSION}"
                sh "mvn versions:set -DnewVersion=${VERSION}"
            }
        }
    }
}
